<Window x:Class="Anis.App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:controls="clr-namespace:Anis.App.Controls"

    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="Cairo"
        FlowDirection="RightToLeft"
        
        Icon="/Assets/icon.ico"
        Title="إعدادات أنيس" Height="500" Width="600"
    
    WindowStartupLocation="CenterScreen"
        Closing="Window_Closing"
        
        WindowStyle="None" AllowsTransparency="True" WindowChrome.IsHitTestVisibleInChrome="True">

    <Grid>
        <!-- This is the outer border for the custom window look -->
        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Background="{DynamicResource PrimaryHueMidBrush}" MouseDown="TitleBar_MouseDown">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <Button Style="{StaticResource MaterialDesignIconButton}" Click="CloseButton_Click" Height="30" Width="30">
                            <materialDesign:PackIcon Kind="Close" Foreground="White"/>
                        </Button>
                    </StackPanel>
                    <TextBlock Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}" 
                               Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
                
                <!-- Tray Icon Definition -->
                <tb:TaskbarIcon x:Name="MyNotifyIcon"
                        IconSource="/Assets/icon.ico"
                        ToolTipText="أنيس - شغال في الخلفية"
                        TrayMouseDoubleClick="MyNotifyIcon_TrayMouseDoubleClick">
                    <tb:TaskbarIcon.ContextMenu>
                        <ContextMenu FlowDirection="RightToLeft">
                            <MenuItem Header="الإعدادات" Click="Settings_Click" />
                            <MenuItem x:Name="PauseMenuItem" Header="إيقاف مؤقت" IsCheckable="True" Click="PauseMenuItem_Click" />
                            <Separator />
                            <MenuItem Header="الخروج" Click="Exit_Click" />
                        </ContextMenu>
                    </tb:TaskbarIcon.ContextMenu>
                </tb:TaskbarIcon>

                <!-- Settings Content -->
                <TabControl Grid.Row="1" Style="{StaticResource MaterialDesignTabControl}">
                    <TabItem Header="الإعدادات العامة">
                        <!-- We put all your old settings content inside this tab -->
                        <Grid Margin="15" DataContext="{Binding SettingsVM}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Orientation="Vertical">
                                <GroupBox Header="الفاصل الزمني (بالدقائق)" Margin="0,5">
                                    <ComboBox Margin="10"
                                        VerticalContentAlignment="Center" 
                                        ItemsSource="{Binding PresetIntervals}"
                                        Text="{Binding IntervalMinutes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        IsEditable="True"
                                        materialDesign:HintAssist.Hint="اختر أو اكتب قيمة" />
                                </GroupBox>
                                <GroupBox Header="المظهر" Margin="0,10">
                                    <ComboBox Margin="10"
                                        ItemsSource="{Binding AvailableThemes}"
                                        SelectedItem="{Binding SelectedTheme}"
                                        DisplayMemberPath="Name"
                                        materialDesign:HintAssist.Hint="اختر المظهر المفضل" />
                                </GroupBox>
                                <GroupBox Header="عام" Margin="0,10">
                                    <StackPanel Margin="10">
                                        <CheckBox Content="تشغيل مع بدء تشغيل ويندوز" 
                                            IsChecked="{Binding RunOnWindowsStartup, Mode=TwoWay}"/>
                                    </StackPanel>
                                </GroupBox>
                            </StackPanel>

                            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button Content="حفظ الإعدادات" Width="120" Height="30" Margin="5" Command="{Binding SaveSettingsCommand}" Style="{StaticResource MaterialDesignRaisedButton}" />
                            </StackPanel>

                        </Grid>
                    </TabItem>

                    <TabItem Header="إدارة المقاطع">
                        <controls:ClipsManagerView DataContext="{Binding ClipsManagerVM}" />
                    </TabItem>

                </TabControl>

            </Grid>
        </Border>
    </Grid>
</Window>